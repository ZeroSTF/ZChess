name: Build and Release
on: [ push ]

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Check for Version Changes
        id: version_check
        run: |
          # Extract the current version from pom.xml
          CURR_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)

          # Extract the previous version from the previous commit's pom.xml
          PREV_VERSION=$(git show HEAD~1:pom.xml | xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" -)

          echo "Current Version: $CURR_VERSION"
          echo "Previous Version: $PREV_VERSION"

          # Compare versions
          if [ "$CURR_VERSION" != "$PREV_VERSION" ]; then
            echo "New version detected: $CURR_VERSION"
            echo "::set-output name=should_build::true"
            echo "::set-output name=version::$CURR_VERSION"
          else
            echo "No new version detected."
            echo "::set-output name=should_build::false"
            echo "::set-output name=version::$CURR_VERSION"
          fi
        shell: bash

      - name: Build with Maven
        if: steps.version_check.outputs.should_build == 'true'
        run: ./mvnw clean package

      - name: Create GitHub Release & Upload Asset
        if: steps.version_check.outputs.should_build == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version_check.outputs.version }}
          name: Release v${{ steps.version_check.outputs.version }}
          body: |
            This release includes the latest build of the application.
            - Version: ${{ steps.version_check.outputs.version }}
          draft: false
          prerelease: false
          files: |
            ./target/dist/ZChess-${{ steps.version_check.outputs.version }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Test jpackage
        if: steps.version_check.outputs.should_build == 'true'
        run: |
          jpackage --version
